# Generated by Django 3.1.4 on 2022-07-06 15:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0026_auto_20220504_1954'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.TextField(blank=True, verbose_name='Цель')),
                ('youtube', models.CharField(max_length=200, verbose_name='Идентификатор youtube канала')),
                ('youtube_error', models.BooleanField(default=False, verbose_name='Была ли ошибка при проверке')),
                ('playlist_id', models.CharField(blank=True, max_length=200, verbose_name='Плейлист youtube канала')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Заголовок канала')),
                ('banner_url', models.CharField(blank=True, max_length=600, null=True, verbose_name='Аватарка канала')),
                ('channel_country', models.CharField(blank=True, max_length=600, null=True, verbose_name='Страна канала')),
                ('channel_keywords', models.TextField(blank=True, null=True, verbose_name='Указанные ключевые слова')),
                ('subs_day', models.IntegerField(default=0, verbose_name='подписчики за день')),
                ('subs_week', models.IntegerField(default=0, verbose_name='подписчики за неделю')),
                ('subs_month', models.IntegerField(default=0, verbose_name='подписчики за месяц')),
                ('subs_quarter', models.IntegerField(default=0, verbose_name='подписчики за квартал')),
                ('views_day', models.IntegerField(default=0, verbose_name='просмотры за день')),
                ('views_week', models.IntegerField(default=0, verbose_name='просмотры за неделю')),
                ('views_month', models.IntegerField(default=0, verbose_name='просмотры за месяц')),
                ('views_quarter', models.IntegerField(default=0, verbose_name='просмотры за квартал')),
                ('is_username', models.BooleanField(default=False)),
                ('rating', models.IntegerField(default=0, verbose_name='рейтинг')),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Канал пользователя',
                'verbose_name_plural': 'Канал пользователя',
                'ordering': ['rating'],
            },
        ),
        migrations.CreateModel(
            name='Niche',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название категории')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_id', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_at', models.DateTimeField()),
                ('avatar', models.URLField(default='https://c0.klipartz.com/pngpicture/358/592/gratis-png-icono-de-signo-de-interrogacion-signo-de-interrogacion.png')),
                ('title', models.CharField(blank=True, max_length=200)),
                ('viewCount', models.IntegerField(default=0)),
                ('likeCount', models.IntegerField(default=0)),
                ('dislikeCount', models.IntegerField(default=0)),
                ('commentsCount', models.IntegerField(default=0)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='channels.account', verbose_name='Видео')),
            ],
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscribers', models.IntegerField(default=0)),
                ('total_views', models.IntegerField(default=0)),
                ('videos_quantity', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='channels', to='channels.account', verbose_name='Каналы')),
            ],
        ),
        migrations.AddField(
            model_name='account',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='channels.niche', verbose_name='Категория'),
        ),
        migrations.AddField(
            model_name='account',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to=settings.AUTH_USER_MODEL, verbose_name='Владелец'),
        ),
        migrations.AddField(
            model_name='account',
            name='rewards',
            field=models.ManyToManyField(blank=True, default=None, to='users.Reward'),
        ),
    ]
